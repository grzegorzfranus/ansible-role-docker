---
# =============================================================================
# Ansible Role: Docker - Network Creation (Optional)
# =============================================================================
# Create user-defined Docker networks using the module if available, otherwise
# fall back to the docker CLI to ensure functionality without extra collections.
#
# Flow:
# 1. Attempt creation via community.docker.docker_network
# 2. Fallback creation via docker CLI
# =============================================================================

# -----------------------------------------------------------------------------
# 1. Create Networks via Module
# -----------------------------------------------------------------------------
- name: ⚙️ Docker | network | Create user-defined networks via module
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver | default('bridge') }}"
    ipam_config: >-
      {{ [{'subnet': item.subnet}] if item.subnet is defined else omit }}
    state: present
  loop: "{{ docker_networks }}"
  register: docker_network_module_result
  ignore_errors: true
  when: >
    item.name is defined

# -----------------------------------------------------------------------------
# 2. Fallback via CLI
# -----------------------------------------------------------------------------
- name: ⚙️ Docker | network | Fallback creation via docker CLI when module not available
  ansible.builtin.command: >-
    docker network create
    --driver {{ item.driver | default('bridge') }}
    {% if item.subnet is defined %}--subnet {{ item.subnet }}{% endif %}
    {{ item.name }}
  args:
    creates: "/var/lib/docker/network/files/local-kv.db"
  when: >
    item.name is defined and (docker_network_module_result is failed)
  loop: "{{ docker_networks }}"
